@page "/SalesList"
@using ProjectAccounting.Models.CustomModels;
@using ProjectAccounting.Models.Models;
@using ProjectAccounting.UI.Services;
@using Syncfusion.Blazor.DropDowns;
@inject ISalesService empService;
@inject IJSRuntime JSRuntime;
<PageTitle>Counter</PageTitle>
<h4>Sales List</h4>

<NavLink class="nav-link" href="SalesEntry">
   Add New
</NavLink>
<div class="container fs-6">

<form class="row g-3">
      <div class="col-md-6">
            <label class="col-form-label-sm">Search</label>
            <select class="form-select-sm " id="search">
                <option value="1" selected>SalesOrder No</option>
                <option value="2">Client Name</option>
                <option value="3">Start Date</option>
            </select>

        </div>
        <div class="col-md-6">
          <input type="text"/>

       
        </div>
        <div class="col-md-12">
        <table class="table table-striped table-bordered bg-light">
            <thead>
                <tr>
                    <th>
                        Sales Order No
                    </th>

                    <th>
                        Start Date
                    </th>
                    <th>
                        Place of Work
                    </th>
                    <th>
                        Type Of Work
                    </th>
                     <th>
                       Project Name
                     </th>
                     <th>
                        Client Name
                      </th>
                     <th>
                       Owner Name
                    </th>

                </tr>
            </thead>
            <tbody>
                @*@foreach (var (index, emp) in emplist.Select((prod,i)=> (i+1,emp)))*@
                @foreach (var usr in userlist)
                {
                    <tr>
                        <td>@usr.SalesOrderNo</td>
                        <td>@usr.Startdate.Value.ToString("dd/MM/yyyy")</td>
                        <td>@usr.PlaceofWork</td>
                        <td>@usr.TypeOfWork</td>
                         <td>@usr.ProjectName</td>
                         <td>@usr.ClientName</td>
                         <td>@usr.Owners</td>
                       <td>
                           @* <input type="button" class="btn btn-primary" value="Update" @onclick="(()=>UpdateEmployee(emp))" />*@
                            <a href="SalesEntry/@usr.Id">
                                 Select
                            </a>
                        </td>
                        @* <input type="button" class="btn btn-primary" value="Update" @onclick="(()=>UpdateEmployee(emp))" />*@
                        @*<td>
                           
                            <a href="UserInfo/@usr.Id">
                                Delete
                            </a>
                        </td>*@
                       
                       @* <input type="button" class="btn btn-primary" value="Delete" @onclick="(()=>DeleteEmployee(emp.EmpId))" />*@
                    </tr>
                }
            </tbody>
        </table>
        </div>
</form>
</div>
@code {
    //private int currentCount = 0;

    //private void IncrementCount()
    //{
    //    currentCount++;
    //}
    private TblSaleOrder User = new TblSaleOrder();
    //private List<TblSaleOrder> userlist = new List<TblSaleOrder>();
    private List<VwSalesInfo> userlist = new List<VwSalesInfo>();
    protected override async Task OnInitializedAsync()
    {
        await GetUsers();
    }
    private async Task GetUsers()
    {
        userlist = await empService.GetvwSales();
    }
  
}
