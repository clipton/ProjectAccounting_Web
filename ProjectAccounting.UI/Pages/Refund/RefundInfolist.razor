@page "/RefundInfolist"
@using ProjectAccounting.Models.CustomModels;
@using ProjectAccounting.Models.Models;
@using ProjectAccounting.UI.Services;
@using Syncfusion.Blazor.DropDowns;
@inject IRefundService RefundService;
@inject IJSRuntime JSRuntime;
@*<PageTitle>Counter</PageTitle>*@
<h4>Refund List</h4>

<NavLink class="nav-link" href="RefundInfo">
                Add New
</NavLink>
<div class="container fs-6">
<form class="row g-3">
     <table class="table table-striped table-bordered bg-light">
            <thead>
                <tr>
                    <th>
                        SalesOrder No
                    </th>
                    <th>
                        Purchase No
                    </th>
                    <th>
                        VoucherNumber
                    </th>
                    <th>
                        BillAmount
                    </th>
                    <th>
                        RefundAmount
                    </th>
                    <th>
                        ReceiveDate
                    </th>
                </tr>
            </thead>
            <tbody>
                @*@foreach (var (index, emp) in emplist.Select((prod,i)=> (i+1,emp)))*@
                @foreach (var Refund in RefundList)
                {
                    <tr>
                        <td>@Refund.SalesOrderNo</td>
                        <td>@Refund.PurchaseNo</td>
                        <td>@Refund.VoucherNumber</td>
                        <td>@Refund.BillAmount</td>
                        <td>@Refund.RefundAmount</td>
                        <td>@Refund.ReceiveDate</td>
                        <td>
                            <a href="RefundInfo/@Refund.Id">
                                 Select
                            </a>
                        </td>
                        @* <input type="button" class="btn btn-primary" value="Update" @onclick="(()=>UpdateEmployee(emp))" />*@
                        @*<td>
                           
                            <a href="UserInfo/@usr.Id">
                                Delete
                            </a>
                        </td>*@
                       
                       @* <input type="button" class="btn btn-primary" value="Delete" @onclick="(()=>DeleteEmployee(emp.EmpId))" />*@
                    </tr>
                }
            </tbody>
        </table>
</form>
</div>
@code {
    //private int currentCount = 0;

    //private void IncrementCount()
    //{
    //    currentCount++;
    //}
    private TblUser User = new TblUser();
    private List<TblRefundExpense> RefundList = new List<TblRefundExpense>();
    protected override async Task OnInitializedAsync()
    {
        await GetRefund();
    }
    private async Task GetRefund()
    {
        RefundList = await RefundService.GetRefund();
    }
  
}
